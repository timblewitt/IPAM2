# This workflow deploys a the AIPAS IPAM Azure Function

name: IPAM-Deploy-Azure-Function

env:
  AZURE_FUNCTIONAPP_NAME: "fa-hmrc-uksouth-ipam"    
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./src/function/"  
  RESOURCEGROUPNAME: "rg-hmrc-uksouth-ipam"    
  SUBSCRIPTIONID: "cfcf982f-4a8c-4faa-b7e5-c693ce56b501"  
  STORAGEACCOUNTNAME: "sahmrckyk4iqlcaxrvi"
  REGION: "uksouth" 

on:
  push:
    branches: [ none ]
  workflow_dispatch:

jobs:
  build-and-deploy-azurefunction:
    runs-on: self-hosted
    steps:
      - name: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: Run PowerShell Bootstrap script
        run: .\bootstrap.ps1
        shell: pwsh

      - name: Copy IPAM PowerShell module to Azure Function
        run: Invoke-Build -Task CopyModuleFiles -File './aipas.build.ps1'
        shell: pwsh

      - name: Log on to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true
          
      - name: Create Function App
        uses: azure/powershell@v1
        with:
          inlineScript: |
            New-AzFunctionAppPlan -Name ${{ env.AZURE_FUNCTIONAPP_NAME }} -ResourceGroupName ${{ env.RESOURCEGROUPNAME }} -Location ${{ env.REGION }} -WorkerType Windows -Sku EP1 
            New-AzFunctionApp -Name ${{ env.AZURE_FUNCTIONAPP_NAME }} -ResourceGroupName ${{ env.RESOURCEGROUPNAME }} -PlanName ${{ env.AZURE_FUNCTIONAPP_NAME }} -Runtime PowerShell -StorageAccountName ${{ env.STORAGEACCOUNTNAME }}
          azPSVersion: latest 
#            az functionapp plan create --name $AZURE_FUNCTIONAPP_NAME --resource-group rg-hmrc-uksouth-ipam --location uksouth --sku EP1
#            az functionapp create --resource-group ${{ env.RESOURCEGROUPNAME }} --plan $AZURE_FUNCTIONAPP_NAME --runtime powershell --functions-version 3 --name $AZURE_FUNCTIONAPP_NAME --storage-account ${{ env.STORAGEACCOUNTNAME }}
#            az network vnet create --resource-group ${{ env.RESOURCEGROUPNAME }} --name vnet-test-01 --address-prefixes 10.0.0.0/16 --subnet-name snet-01 --subnet-prefixes 10.0.0.0/24
#            az appservice ase create --name asp20211104a --resource-group ${{ env.RESOURCEGROUPNAME }} --vnet-name vnet-test-01 --subnet snet-01 --kind ASEv2 --front-end-sku I1 --os-preference Windows --virtual-ip-type Internal
#            az appservice (or functionapp?) plan create --name $AZURE_FUNCTIONAPP_NAME --resource-group ${{ env.RESOURCEGROUPNAME }} --location ${{ env.REGION }} --app-service-environment asp20211104a --sku B1
#            az functionapp create --resource-group ${{ env.RESOURCEGROUPNAME }} --plan $AZURE_FUNCTIONAPP_NAME --runtime powershell --functions-version 3 --name $AZURE_FUNCTIONAPP_NAME --storage-account ${{ env.STORAGEACCOUNTNAME }}
##            az functionapp create --resource-group ${{ env.RESOURCEGROUPNAME }} --consumption-plan-location ${{ env.REGION }} --runtime powershell --functions-version 3 --name $AZURE_FUNCTIONAPP_NAME --storage-account ${{ env.STORAGEACCOUNTNAME }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: 'Configure App Settings'
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          app-settings-json: '${{ secrets.APP_SETTINGS }}'
        id: settings
